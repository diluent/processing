{"version":3,"sources":["menu/source/price.png","menu/source/floor_area.png","menu/source/floor_count.png","menu/source/height.png","menu/source/hotel_price.png","menu/source/time.png","graphics/floor_count.png","graphics/height.png","graphics/price.png","graphics/time.png","Info/svg/time2.png","Info/svg/time3.png","Info/svg/time4.png","Info/svg/time5.png","menu/Menu.js","Noise/Noise.js","Info/Info.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Menu","_ref","onClick","react_default","a","createElement","className","src","price","floor_area","floor_count","height","hotel_price","time","Noise","state","view","canvas","_this2","this","frame","setInterval","renderNoise","frameCount","openSimplex","OpenSimplexNoise","Date","now","TWO_PI","Math","PI","width","window","innerWidth","innerHeight","t","ctx","getContext","x","y","noise2D","cos","sin","_ref2","Object","slicedToArray","fromX","fromY","toX","toY","beginPath","moveTo","lineTo","stroke","_this3","ref","React","Component","TimeInfo","graphics","App","setView","_this","setState","menu_Menu","src_Noise_Noise","Info","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gJCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8RCsBzBC,SAbF,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAOF,UAAU,UAAUJ,QAAS,kBAAMA,EAAQ,YAC5DC,EAAAC,EAAAC,cAAA,OAAKE,IAAKE,IAAYH,UAAU,UAAUJ,QAAS,kBAAMA,EAAQ,iBACjEC,EAAAC,EAAAC,cAAA,OAAKE,IAAKG,IAAaJ,UAAU,UAAUJ,QAAS,kBAAMA,EAAQ,kBAClEC,EAAAC,EAAAC,cAAA,OAAKE,IAAKI,IAAQL,UAAU,UAAUJ,QAAS,kBAAMA,EAAQ,aAC7DC,EAAAC,EAAAC,cAAA,OAAKE,IAAKK,IAAaN,UAAU,UAAUJ,QAAS,kBAAMA,EAAQ,kBAClEC,EAAAC,EAAAC,cAAA,OAAKE,IAAKM,IAAMP,UAAU,UAAUJ,QAAS,kBAAMA,EAAQ,uCC0DpDY,oNArEbC,MAAQ,CACNC,KAAM,QAGRC,OAAS,wFAEW,IAAAC,EAAAC,KACdC,EAAQ,EACZC,YAAY,kBAAMH,EAAKI,YAAYF,MAAU,yCAGnCG,GACV,GAAKJ,KAAKF,OAAV,CAIA,IAAMO,EAAc,IAAIC,IAAiBC,KAAKC,OAExCC,EAAiB,EAARC,KAAKC,GACdC,EAAQC,OAAOC,WACftB,EAASqB,OAAOE,YAOhBC,EAAK,EAAIZ,EAJG,IAImB,EAGrCJ,KAAKF,OAAON,OAASA,EACrBQ,KAAKF,OAAOc,MAAQA,EAIpB,IAHA,IAAIK,EAAMjB,KAAKF,OAAOoB,WAAW,MAGzBC,EAAI,EAAEA,EAAEP,EAAMO,GAbN,GAcd,IAAI,IAAIC,EAAI,EAAEA,EAAE5B,EAAO4B,GAdT,GAcoB,CAChC,IADgCtC,EACvBuB,EAAYgB,QAZX,IAYyBF,EAZzB,IAYiCC,EAbrC,GAayCV,KAAKY,IAAIb,EAAOO,GAbzD,GAa8DN,KAAKa,IAAId,EAAOO,IAEhD,EAChC,CAACG,EAAGC,EAAGD,EAlBC,GAkBUC,EAlBV,IAmBR,CAACD,EAAGC,EAnBI,GAmBOD,EAnBP,GAmBkBC,GALEI,EAAAC,OAAAC,EAAA,EAAAD,CAAA3C,EAAA,GAGzB6C,EAHyBH,EAAA,GAGlBI,EAHkBJ,EAAA,GAGXK,EAHWL,EAAA,GAGNM,EAHMN,EAAA,GAOhCP,EAAIc,YACJd,EAAIe,OAAOL,EAAOC,GAClBX,EAAIgB,OAAOJ,EAAKC,GAChBb,EAAIiB,4CAgBD,IAAAC,EAAAnC,KACP,OACEhB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASiD,IAAK,SAAAA,GAAG,OAAID,EAAKrC,OAASsC,GAAK5C,OAAQqB,OAAOE,YAAaH,MAAOC,OAAOC,oBAjEtFuB,IAAMC,0CCcXC,MAZf,SAAAzD,GAA8B,IAAX0D,EAAW1D,EAAX0D,SACjB,OACExD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKoD,EAAUrD,UAAU,+EC0BrBsD,oNAxBb7C,MAAQ,CACNC,KAAM,QAGR6C,QAAU,SAAC7C,GACT8C,EAAKC,SAAS,CAAC/C,kFAIf,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC2D,EAAD,CAAM9D,QAASiB,KAAK0C,UACpB1D,EAAAC,EAAAC,cAAC4D,EAAD,MACA9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACQ,gBAApBa,KAAKJ,MAAMC,MAA0Bb,EAAAC,EAAAC,cAAC6D,EAAD,CAAMP,SAAUjD,MACjC,WAApBS,KAAKJ,MAAMC,MAAqBb,EAAAC,EAAAC,cAAC6D,EAAD,CAAMP,SAAUhD,MAC5B,UAApBQ,KAAKJ,MAAMC,MAAoBb,EAAAC,EAAAC,cAAC6D,EAAD,CAAMP,SAAUnD,MAC3B,SAApBW,KAAKJ,MAAMC,MAAmBb,EAAAC,EAAAC,cAAC6D,EAAD,CAAMP,SAAU9C,eAlBvC2C,IAAMC,YCCJU,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrE,EAAAC,EAAAC,cAACoE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.87beef62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/price.a5159f79.png\";","module.exports = __webpack_public_path__ + \"static/media/floor_area.ab9d10be.png\";","module.exports = __webpack_public_path__ + \"static/media/floor_count.90ae2d44.png\";","module.exports = __webpack_public_path__ + \"static/media/height.33faa889.png\";","module.exports = __webpack_public_path__ + \"static/media/hotel_price.fac1dfc2.png\";","module.exports = __webpack_public_path__ + \"static/media/time.fc1702e8.png\";","module.exports = __webpack_public_path__ + \"static/media/floor_count.8e16c72c.png\";","module.exports = __webpack_public_path__ + \"static/media/height.368367da.png\";","module.exports = __webpack_public_path__ + \"static/media/price.38f1dcac.png\";","module.exports = __webpack_public_path__ + \"static/media/time.c926b535.png\";","module.exports = __webpack_public_path__ + \"static/media/time2.b1a3afa0.png\";","module.exports = __webpack_public_path__ + \"static/media/time3.19a28348.png\";","module.exports = __webpack_public_path__ + \"static/media/time4.652a2b36.png\";","module.exports = __webpack_public_path__ + \"static/media/time5.296a8a95.png\";","import React from 'react';\nimport price from './source/price.png';\nimport floor_area from './source/floor_area.png';\nimport floor_count from './source/floor_count.png';\nimport height from './source/height.png';\nimport hotel_price from './source/hotel_price.png';\nimport time from './source/time.png';\nimport './styles.css';\n\nconst Menu = ({onClick}) => {\n  return (\n    <div className=\"menu\">\n        <img src={price} className=\"menuImg\" onClick={() => onClick('price')}/>\n        <img src={floor_area} className=\"menuImg\" onClick={() => onClick('floor_area')}/>\n        <img src={floor_count} className=\"menuImg\" onClick={() => onClick('floor_count')}/>\n        <img src={height} className=\"menuImg\" onClick={() => onClick('height')}/>\n        <img src={hotel_price} className=\"menuImg\" onClick={() => onClick('hotel_price')}/>\n        <img src={time} className=\"menuImg\" onClick={() => onClick('time')}/>\n    </div>\n  );\n}\n\nexport default Menu;\n","import OpenSimplexNoise from 'open-simplex-noise';\nimport React from 'react';\nimport './styles.css';\n\n\nclass Noise extends React.Component {\n  state = {\n    view: null,\n  }\n\n  canvas = null;\n\n  componentDidMount() {\n    let frame = 1;\n    setInterval(() => this.renderNoise(frame++), 200);\n  }\n\n  renderNoise(frameCount) {\n    if (!this.canvas) {\n      return;\n    }\n\n    const openSimplex = new OpenSimplexNoise(Date.now());\n\n    const TWO_PI = Math.PI*2;\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    const spacing = 15;\n    const numFrames = 100;\n    const R = 0.5;\n    const scale = 0.01;\n\n    const t = (1.0*frameCount/numFrames)%1;\n\n    // const imageData = ctx.createImageData(width, height);\n    this.canvas.height = height;\n    this.canvas.width = width;\n    var ctx = this.canvas.getContext(\"2d\");\n    \n\n    for(let x = 0;x<width;x+=spacing){\n      for(let y = 0;y<height;y+=spacing){\n        let ns = openSimplex.noise2D(scale*x,scale*y,R*Math.cos(TWO_PI*t),R*Math.sin(TWO_PI*t));\n\n        const [fromX, fromY, toX, toY] = ns<0\n          ? [x, y, x+spacing, y+spacing]\n          : [x, y+spacing, x+spacing, y];\n\n        ctx.beginPath();\n        ctx.moveTo(fromX, fromY);\n        ctx.lineTo(toX, toY);\n        ctx.stroke();\n      }\n    }\n\n    // ctx.putImageData(imageData, 0, 0);\n\n    // if(frameCount<=numFrames){\n    //   saveFrame(\"fr###.png\");\n    // }\n    // if(frameCount==numFrames){\n    //   println(\"finished\");\n    //   //stop();\n    // }\n}\n\n\n  render() {\n    return (\n      <canvas className='canvas' ref={ref => this.canvas = ref} height={window.innerHeight} width={window.innerWidth} />\n    );\n  }\n}\n\nexport default Noise;\n","import React from 'react';\nimport time2 from './svg/time2.png';\nimport time3 from './svg/time3.png';\nimport time4 from './svg/time4.png';\nimport time5 from './svg/time5.png';\nimport './styles.css';\n\nfunction TimeInfo({graphics}) {\n  return (\n    <div className=\"image-container\">\n      <img src={graphics} className=\"part\" />\n      {/* <img src={time2} className=\"part part2\" />\n      <img src={time3} className=\"part part3\" />\n      <img src={time4} className=\"part part4\" />\n      <img src={time5} className=\"part part5\" /> */}\n    </div>\n  );\n}\n\nexport default TimeInfo;\n","import React from 'react';\nimport Menu from './menu/Menu';\nimport Noise from './Noise/Noise';\nimport Info from './Info/Info';\nimport floor_count from './graphics/floor_count.png';\nimport height from './graphics/height.png';\nimport price from './graphics/price.png';\nimport time from './graphics/time.png';\n\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    view: null,\n  }\n\n  setView = (view) => {\n    this.setState({view});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Menu onClick={this.setView} />\n        <Noise />\n        <div className=\"info\">\n          {this.state.view === 'floor_count' && <Info graphics={floor_count} />}\n          {this.state.view === 'height' && <Info graphics={height} />}\n          {this.state.view === 'price' && <Info graphics={price} />}\n          {this.state.view === 'time' && <Info graphics={time} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}